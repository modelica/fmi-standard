<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="fmi3Annotation.xsd"/>
	<xs:include schemaLocation="fmi3AttributeGroups.xsd"/>
	<xs:annotation>
		<xs:documentation>
Copyright(c) 2008-2011 MODELISAR consortium,
             2012-2018 Modelica Association Project "FMI".
             All rights reserved.

This file is licensed by the copyright holders under the 2-Clause BSD License
(https://opensource.org/licenses/BSD-2-Clause):

----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
 this list of conditions and the following disclaimer in the documentation
 and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
----------------------------------------------------------------------------
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="fmi3Float64">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Float64Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>List of start values. Value before initialization, if initial=exact or approx.
					max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:double"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
				<xs:attributeGroup ref="fmi3RealVariableAttributes"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Float32">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Float32Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>List of start values. Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:float"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
				<xs:attributeGroup ref="fmi3RealVariableAttributes"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Int8">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Int8Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:byte"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3UInt8">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3UInt8Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:unsignedByte"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Int16">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Int16Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:short"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3UInt16">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3UInt16Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:unsignedShort"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Int32">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Int32Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:int"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3UInt32">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3UInt32Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:unsignedInt"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Int64">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3Int64Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:long"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3UInt64">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attributeGroup ref="fmi3UInt64Attributes"/>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start[i] >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:unsignedLong"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Boolean">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:boolean"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3String">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:sequence maxOccurs="unbounded">
					<xs:element name="Start">
						<xs:complexType>
							<xs:attribute name="value" type="xs:string">
								<xs:annotation>
									<xs:documentation>Value before initialization, if initial=exact or approx</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Binary">
		<xs:complexContent>
			<xs:extension base="fmi3VariableBase">
				<xs:attribute name="mimeType" type="xs:normalizedString" use="optional" default="application/octet-stream">
					<xs:annotation>
						<xs:documentation>Should indicate the type of data passed as a binary. Defaults to application/octet-stream,
							which is unspecific.  Implementations can use this information to provide guidance to the user about
							valid/useful connections.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="maxSize" type="xs:nonNegativeInteger" use="optional">
					<xs:annotation>
						<xs:documentation>If present, limits the maximum size of the binary to the indicated value.
							All variable accesses, both getting and setting of values must guarantee that the returned
							size of the binary is strictly equal or less than this maximum size.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list itemType="xs:hexBinary"/>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3EnumerationBase">
		<xs:complexContent>
			<xs:restriction base="fmi3VariableBase">
				<xs:attribute name="declaredType" use="prohibited"/>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3Enumeration">
		<xs:complexContent>
			<xs:extension base="fmi3EnumerationBase">
				<xs:attribute name="declaredType" type="xs:normalizedString" use="required">
					<xs:annotation>
						<xs:documentation>Name of type defined with TypeDefinitions / SimpleType </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="quantity" type="xs:normalizedString"/>
				<xs:attribute name="min" type="xs:int"/>
				<xs:attribute name="max" type="xs:int">
					<xs:annotation>
						<xs:documentation>max >= min required</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="start">
					<xs:annotation>
						<xs:documentation>Value before initialization, if initial=exact or approx.
							max >= start >= min required</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list>
							<xs:simpleType>
								<xs:restriction base="xs:int"/>
							</xs:simpleType>
						</xs:list>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="fmi3VariableBase" abstract="true">
		<xs:annotation>
			<xs:documentation>Properties of a variable</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Dimensions" minOccurs="0">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="Dimension">
							<xs:complexType>
								<xs:attribute name="start" type="xs:unsignedInt">
									<xs:annotation>
										<xs:documentation>If start value is defined, the size is constant.
start value must only be defined if index to structuralParameter is not given.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="valueReference" type="xs:unsignedInt">
									<xs:annotation>
										<xs:documentation>Link to structuralParameter element. Must be defined if no start value exist.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Annotations" type="fmi3Annotation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional data of the variable, e.g., for the dialog menu or the graphical layout</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:normalizedString" use="required">
			<xs:annotation>
				<xs:documentation>Identifier of variable, e.g. "A_Matrix.", "abc'.d". "name" must be unique with respect to all other elements of the ModelVariables list</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="valueReference" type="xs:unsignedInt" use="required">
			<xs:annotation>
				<xs:documentation>Identifier for variable value in FMI3 function calls (not necessarily unique with respect to all variables)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string"/>
		<xs:attribute name="causality" default="local">
			<xs:annotation>
				<xs:documentation>parameter: independent parameter
calculatedParameter: calculated parameter
input/output: can be used in connections
local: variable calculated from other variables
independent: independent variable (usually time)
structuralParameter: structural parameter usually used for sizes</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:normalizedString">
					<xs:enumeration value="parameter"/>
					<xs:enumeration value="calculatedParameter"/>
					<xs:enumeration value="input"/>
					<xs:enumeration value="output"/>
					<xs:enumeration value="local"/>
					<xs:enumeration value="independent"/>
					<xs:enumeration value="structuralParameter"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="variability" default="continuous">
			<xs:annotation>
				<xs:documentation>constant: value never changes
fixed: value fixed after initialization
tunable: value constant between external events
discrete: value constant between internal events
continuous: no restriction on value changes</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:normalizedString">
					<xs:enumeration value="constant"/>
					<xs:enumeration value="fixed"/>
					<xs:enumeration value="tunable"/>
					<xs:enumeration value="discrete"/>
					<xs:enumeration value="continuous"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="initial">
			<xs:annotation>
				<xs:documentation>exact: initialized with start value
approx: iteration variable that starts with start value
calculated: calculated from other variables.
If not provided, initial is deduced from causality and variability (details see specification)</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:normalizedString">
					<xs:enumeration value="exact"/>
					<xs:enumeration value="approx"/>
					<xs:enumeration value="calculated"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="canHandleMultipleSetPerTimeInstant" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Only for ModelExchange and only for variables with variability = "input":
If present with value = false, then only one fmi3SetXXX call is allowed at one super dense time instant. In other words, this input is not allowed to appear in an algebraic loop.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="declaredType" type="xs:normalizedString">
			<xs:annotation>
				<xs:documentation>If present, name of type defined with TypeDefinitions / SimpleType providing defaults.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	
	<xs:group name="fmi3Variable">
		<xs:choice>
			<xs:element name="Float32" type="fmi3Float32"/>
			<xs:element name="Float64" type="fmi3Float64"/>
			<xs:element name="Int8" type="fmi3Int8"/>
			<xs:element name="UInt8" type="fmi3UInt8"/>
			<xs:element name="Int16" type="fmi3Int16"/>
			<xs:element name="UInt16" type="fmi3UInt16"/>
			<xs:element name="Int32" type="fmi3Int32"/>
			<xs:element name="UInt32" type="fmi3UInt32"/>
			<xs:element name="Int64" type="fmi3Int64"/>
			<xs:element name="UInt64" type="fmi3UInt64"/>
			<xs:element name="Boolean" type="fmi3Boolean"/>
			<xs:element name="String" type="fmi3String"/>
			<xs:element name="Binary" type="fmi3Binary"/>
			<xs:element name="Enumeration" type="fmi3Enumeration"/>
		</xs:choice>
	</xs:group>
</xs:schema>
