<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>
Copyright(c) 2008-2011 MODELISAR consortium,
             2012-2018 Modelica Association Project "FMI".
             All rights reserved.

This file is licensed by the copyright holders under the 2-Clause BSD License
(https://opensource.org/licenses/BSD-2-Clause):

----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
 this list of conditions and the following disclaimer in the documentation
 and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
----------------------------------------------------------------------------
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="fmi3VariableDependency">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="Unknown">
				<xs:annotation>
					<xs:documentation>Dependency of scalar Unknown from Knowns
in Continuous-Time and Event Mode (ModelExchange),
and at Communication Points (CoSimulation):
    Unknown=f(Known_1, Known_2, ...).
The Knowns are "inputs", "continuous states" and
"independent variable" (usually time)".</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="valueReference" type="xs:unsignedInt" use="required">
						<xs:annotation>
							<xs:documentation>Variable valueReference of Unknown</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="dependencies">
						<xs:annotation>
							<xs:documentation>Defines the dependency of the Unknown (directly or indirectly via auxiliary variables) on the Knowns in Continuous-Time and Event Mode (ModelExchange) and at Communication Points (CoSimulation). If not present, it must be assumed that the Unknown depends on all Knowns. If present as empty list, the Unknown depends on none of the Knowns. Otherwise the Unknown depends on the Knowns defined by the given Variable valueReference. The valueReferences are ordered according to the size of the index of the variable in the Variable list, starting with the smallest index.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="xs:unsignedInt"/>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="dependenciesKind">
						<xs:annotation>
							<xs:documentation>If not present, it must be assumed that the Unknown depends on the Knowns without a particular structure. Otherwise, the corresponding Known v enters the equation as:
= "dependent": no particular structure, f(v)
= "constant"   : constant factor, c*v (only for Real variablse)
= "fixed"        : fixed factor, p*v (only for Real variables)
= "tunable"    : tunable factor, p*v (only for Real variables)
= "discrete"    : discrete factor, d*v (only for Real variables)
If "dependenciesKind" is present, "dependencies" must be present and must have the same number of list elements.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list>
								<xs:simpleType>
									<xs:restriction base="xs:normalizedString">
										<xs:enumeration value="dependent"/>
										<xs:enumeration value="constant"/>
										<xs:enumeration value="fixed"/>
										<xs:enumeration value="tunable"/>
										<xs:enumeration value="discrete"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:list>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
